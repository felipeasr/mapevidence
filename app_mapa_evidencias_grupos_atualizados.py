import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Mapa de Evid√™ncias", layout="wide")

# === 1) Carrega dados ===
df = pd.read_excel("mapa_de_evidencias_com_paises_e_bases.xlsx")
df["Tamanho"] = 1

# === 2) Limpeza dos n√≠veis de confian√ßa ===
# Remove espa√ßos em branco e padroniza a caixa (title case)
df["N√≠vel de Confian√ßa"] = (
    df["N√≠vel de Confian√ßa"]
    .astype(str)
    .str.strip()
    .str.title()
)

# (Opcional: para ver se sobrou alguma categoria estranha)
st.sidebar.write("Categorias encontradas:", df["N√≠vel de Confian√ßa"].unique())

# === 3) Filtros na sidebar ===
with st.sidebar:
    st.header("üîç Filtros")
    pais = st.selectbox("üåç Pa√≠s", ["Todos"] + sorted(df["Pa√≠s"].dropna().unique()))
    populacao = st.selectbox("üë• Popula√ß√£o", ["Todos"] + sorted(df["Popula√ß√£o"].dropna().unique()))
    efeito = st.selectbox("‚ö†Ô∏è Efeito Adverso", ["Todos"] + sorted(df["Efeito Adverso"].dropna().unique()))
    grupo_interv = st.selectbox("üß© Grupo de Interven√ß√£o", ["Todos"] + sorted(df["Grupo de Interven√ß√£o"].dropna().unique()))

# Aplica os filtros
df_filtrado = df.copy()
if pais != "Todos":
    df_filtrado = df_filtrado[df_filtrado["Pa√≠s"] == pais]
if populacao != "Todos":
    df_filtrado = df_filtrado[df_filtrado["Popula√ß√£o"] == populacao]
if efeito != "Todos":
    df_filtrado = df_filtrado[df_filtrado["Efeito Adverso"] == efeito]
if grupo_interv != "Todos":
    df_filtrado = df_filtrado[df_filtrado["Grupo de Interven√ß√£o"] == grupo_interv]

# === 4) Cabe√ßalho e contagem ===
st.title("üìä Mapa de Evid√™ncias em Oncologia")
st.markdown(f"**Total de estudos √∫nicos:** {df_filtrado['T√≠tulo'].nunique()}")

# === 5) Ordena√ß√£o dos eixos ===
ordem_y = (
    df_filtrado[["Grupo de Interven√ß√£o", "Interven√ß√£o Ordenada"]]
    .drop_duplicates()
    .assign(GrupoRank=lambda d: d["Grupo de Interven√ß√£o"].rank(method="dense").astype(int))
    .sort_values(["GrupoRank", "Interven√ß√£o Ordenada"])
)
ordem_y_list = ordem_y["Interven√ß√£o Ordenada"].tolist()
ordem_x = df_filtrado.sort_values(by=["Grupo de Desfecho", "Desfecho"])["Desfecho"].unique()

# === 6) Cria√ß√£o do gr√°fico com cores fixas ===
fig = px.scatter(
    df_filtrado,
    x="Desfecho",
    y="Interven√ß√£o Ordenada",
    size="Tamanho",
    color="N√≠vel de Confian√ßa",
    hover_data=["Grupo de Interven√ß√£o", "Grupo de Desfecho", "T√≠tulo", "Ano", "Resultado (Efeito)"],
    category_orders={
        "Desfecho": ordem_x,
        "Interven√ß√£o Ordenada": ordem_y_list
    },
    size_max=20,
    height=900,
    color_discrete_map={
        "Muito Baixo": "#FF4D4D",
        "Baixo":       "#FF9999",
        "Moderado":    "#4D79FF",
        "Alto":        "#3366FF",
        "Muito Alto":  "#0033CC",
    }
)

# Adiciona linhas horizontais para separar grupos
y_positions = []
prev = None
for _, row in ordem_y.iterrows():
    if prev and row["Grupo de Interven√ß√£o"] != prev:
        y_positions.append(row["Interven√ß√£o Ordenada"])
    prev = row["Grupo de Interven√ß√£o"]

for y in y_positions:
    fig.add_shape(
        type="line",
        x0=-0.5, x1=len(ordem_x) - 0.5,
        y0=y, y1=y,
        line=dict(color="gray", width=1, dash="dot"),
        xref="x", yref="y",
    )

fig.update_layout(
    xaxis_title="Desfechos (agrupados)",
    yaxis_title="Grupos de Interven√ß√£o | Interven√ß√µes",
    margin=dict(l=40, r=40, t=40, b=40),
)

# === 7) Exibe o gr√°fico e a tabela ===
st.plotly_chart(fig, use_container_width=True)

with st.expander("üìã Ver tabela de dados"):
    st.dataframe(df_filtrado)
